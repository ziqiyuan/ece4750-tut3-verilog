$date
	Fri Jan 27 22:47:14 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top $end
$var wire 8 ! out [7:0] $end
$var reg 1 " clk $end
$var reg 8 # in_ [7:0] $end
$var reg 1 $ reset $end
$scope module reg_incr $end
$var wire 1 " clk $end
$var wire 8 % in_ [7:0] $end
$var wire 8 & out [7:0] $end
$var wire 1 $ reset $end
$var reg 8 ' reg_out [7:0] $end
$var reg 8 ( temp_wire [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx (
bx '
bx &
bx %
1$
bx #
1"
bx !
$end
#5
0"
#10
b1 !
b1 &
b1 (
b0 '
1"
#11
b1 #
b1 %
0$
#15
0"
#20
b10 !
b10 &
b10 (
b1 '
1"
#21
b10011 #
b10011 %
#25
0"
#30
b10100 !
b10100 &
b10100 (
b10011 '
1"
#31
b100101 #
b100101 %
#35
0"
#40
b100110 !
b100110 &
b100110 (
b100101 '
1"
#41
b110111 #
b110111 %
#45
0"
#50
b111000 !
b111000 &
b111000 (
b110111 '
1"
#51
